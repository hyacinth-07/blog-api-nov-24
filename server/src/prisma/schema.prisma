// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id        String    @unique @default(uuid())
  name      String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  isAuthor  Boolean   @default(false)
  posts     Post[]    @relation("authoredPosts")
  comments  Comment[] @relation("authoredComments")
}

model Post {
  id          String    @unique @default(uuid())
  title       String
  body        String
  author      User      @relation("authoredPosts", fields: [authorId], references: [id])
  authorId    String
  isPublished Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  comments    Comment[] @relation("postComments")
}

model Comment {
  id            String   @unique @default(uuid())
  body          String
  author        User     @relation("authoredComments", fields: [authorId], references: [id])
  authorId      String
  postComment   Post     @relation("postComments", fields: [postCommentId], references: [id])
  postCommentId String
  likes         Int      @default(0)
  dislikes      Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
